pipeline{
    agent any
    tools{
        maven 'M2_HOME'
    }

    stages{
        stage('sonar-scan'){
            steps{
                withSonarQubeEnv('sonarQube'){
                    sh 'mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=EsthaDevops2022_geo-app'
                }
                
            }
        }

        stage('maven'){
            steps{
                sh 'mvn clean validate compile install test package'
                
            }
        }
        stage('upload artifact'){
            steps{
                sh 'curl -uadmin:AP7urdiCeU6TTGNQ4qYzZLk4e2X -T \
                target/bio*.jar \
                "http://44.203.125.119:8081/artifactory/geolocation/geo/bio_${BUILD_ID}.jar"'
            }

        }
        stage('docker login'){
            steps{
                sh 'aws ecr get-login-password --region us-east-1 | \
                docker login --username AWS --password-stdin \
                003611784138.dkr.ecr.us-east-1.amazonaws.com'
            }
        }
        stage('docker image build'){
            steps{
                sh 'docker build -t utc-app-dev:v.${BUILD_ID} .'
                sh 'docker build -t utc-app-dev:latest .'
            } 
        }
        stage('Image tagging'){
            steps{
                sh 'docker tag utc-app-dev:utc-app-dev:v.${BUILD_ID} \
                003611784138.dkr.ecr.us-east-1.amazonaws.com/utc-app-dev:latest'
                
            }
        }
        stage('push image to ECR'){
            steps{
                sh 'docker push 003611784138.dkr.ecr.us-east-1.amazonaws.com/utc-app-dev:latest'
                sh 'docker push 003611784138.dkr.ecr.us-east-1.amazonaws.com/utc-app-dev:v.${BUILD_ID}'
            }
        }

    } 
                    
}